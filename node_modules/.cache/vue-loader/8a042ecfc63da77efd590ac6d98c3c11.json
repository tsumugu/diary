{"remainingRequest":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsumugu/Documents/dev/vue/diary/src/views/RegistEventInfo.vue?vue&type=style&index=0&id=567a3ce8&scoped=true&lang=scss&","dependencies":[{"path":"/Users/tsumugu/Documents/dev/vue/diary/src/views/RegistEventInfo.vue","mtime":1608284593771},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlZ2lzdCB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogICZfX2xvYWRpbmcgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgfQogICZfX2JvZHkgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICAmX19zaWduaW5lZCB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBoZWlnaHQ6IDEwMCU7CiAgICB9CiAgfQp9Ci5pbWdQcmV2aWV3ID4gaW1nIHsKICB3aWR0aDogMTAwcHg7Cn0K"},{"version":3,"sources":["RegistEventInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegistEventInfo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"regist\">\n    <div class=\"regist__loading\" v-if=\"isNowLoading\"><!-- Loading --></div>\n    <div class=\"regist__body\" v-else>\n      <div class=\"regist__body__signined\" v-if=\"isSignIn\">\n        <!-- form -->\n        <div><input type=\"datetime-local\" placeholder=\"日付\" v-model=\"when\" /></div>\n        <div><select v-model=\"where\"><option disabled value=\"\">場所</option><option v-for=\"(val, key) in placeList\" v-bind:value=\"val.id\">{{val.name}}</option></select></div>\n        <div><select v-model=\"who\"><option disabled value=\"\">誰と行ったか</option><option v-for=\"(val, key) in friendsList\" v-bind:value=\"val.id\">{{val.name}}</option></select></div>\n        <div><textarea placeholder=\"したこと\" v-model=\"what\" /></div>\n        <div class=\"imgPreview\">\n          <img v-bind:src=\"src\" v-for=\"(src, key) in previewImageList\" :key=\"key\">\n        </div>\n        <div><input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" multiple /></div>\n        <div><button v-on:click=\"onSubmit\">送信</button></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase'\nvar database = firebase.database();\n\nimport S3 from 'aws-s3';\nconst S3Config = {\n  bucketName: 'tsumugu-diary',\n  dirName: 'uploads',\n  region: 'ap-northeast-1',\n  accessKeyId: 'AKIARN7ABQXWRAO52J3K',\n  secretAccessKey: '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'\n}\nconst S3Client = new S3(S3Config)\n\nexport default {\n  name: \"regist\",\n  data () {\n    return {\n      isSignIn: null,\n      userInfo: null,\n      isNowLoading: true,\n      uploadFiles: null,\n      previewImageList: [],\n      placeList: [\n        {id:\"thisisid-aaaa\", name:\"Tokyo\"},\n        {id:\"thisisid-bbbb\", name:\"Kyoto\"},\n        {id:\"thisisid-cccc\", name:\"Hokkaido\"}\n      ],\n      friendsList: [\n        {id:\"thisisid-dddd\", name:\"Taro\"},\n        {id:\"thisisid-eeee\", name:\"Jiro\"},\n        {id:\"thisisid-ffff\", name:\"Saburo\"}\n      ],\n      when: null,\n      where: null,\n      who: null,\n      what: null,\n      photo: null,\n    }\n  },\n  watch: {\n    isSignIn: function (newValue, oldValue) {\n      //alert(this.isSignIn)\n    },\n    where: function () {\n      console.log(this.where)\n    },\n    who: function () {\n      console.log(this.who)\n    }\n  },\n  methods: {\n    onFileChange(e) {\n      const files = e.target.files || e.dataTransfer.files;\n      this.uploadFiles = files\n      Array.from(files).forEach(file => {\n        this.createPreviewImage(file)\n      });\n      //this.createPreviewImage(files)\n    },\n    createPreviewImage(file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.previewImageList.push(e.target.result);\n        console.log(this.previewImageList);\n      };\n      reader.readAsDataURL(file);\n    },\n    genRandomFileName() {\n      var strong = 1000;\n      return new Date().getTime().toString(16)  + Math.floor(strong*Math.random()).toString(16)\n    },\n    uploadImg(file, newFileName) {\n      return S3Client.uploadFile(file, newFileName)\n    },\n    onSubmit() {\n      // submit処理\n      // 1. 画像をS3にアップロードする\n      Array.from(this.uploadFiles).forEach(file => {\n        this.uploadImg(file, this.genRandomFileName()).then(data => console.log(data)).catch(err => console.error(err))\n      });\n      //\n          /*\n    firebase.database().ref('users/' + userId).set({\n    username: name,\n    email: email,\n    profile_picture : imageUrl\n  });\n  */\n    }\n  },\n  mounted() {\n    const _this = this\n    firebase.auth().onAuthStateChanged(user => {\n      _this.isSignIn = (user != null)\n      _this.userInfo = user\n      _this.isNowLoading = false\n    })\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.regist {\n  width: 100%;\n  height: 100%;\n  &__loading {\n    width: 100%;\n    height: 100%;\n  }\n  &__body {\n    width: 100%;\n    height: 100%;\n    &__signined {\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n.imgPreview > img {\n  width: 100px;\n}\n</style>"]}]}