{"remainingRequest":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/babel-loader/lib/index.js!/Users/tsumugu/Documents/dev/vue/diary/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tsumugu/Documents/dev/vue/diary/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsumugu/Documents/dev/vue/diary/src/views/RegistEventInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tsumugu/Documents/dev/vue/diary/src/views/RegistEventInfo.vue","mtime":1608394839908},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RegistEventInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"regist\">\n    <div class=\"regist__loading\" v-if=\"isNowLoading\"><!-- Loading --></div>\n    <div class=\"regist__body\" v-else>\n      <div class=\"regist__body__signined\" v-if=\"isSignIn\">\n        <!-- form -->\n        <div><input type=\"datetime-local\" placeholder=\"日付\" v-model=\"when\" /></div>\n        <div><select v-model=\"where\"><option disabled value=\"\">場所</option><option v-for=\"(val, key) in placeList\" v-bind:value=\"val.place_id\" v-bind:disabled=\"val.place_id==null\">{{val.name}}</option></select><div><input type=\"text\" v-model=\"whereAdd\" /><button v-on:click=\"onAddWhereButton\">+</button></div></div>\n        <div><select v-model=\"who\"><option disabled value=\"\">誰と行ったか</option><option v-for=\"(val, key) in friendsList\" v-bind:value=\"val.friends_id\">{{val.name}}</option></select><div><input type=\"text\" v-model=\"whoAdd\" /><button v-on:click=\"onAddWhoButton\">+</button></div></div>\n        <div><textarea placeholder=\"したこと\" v-model=\"what\" /></div>\n        <div class=\"imgPreview\">\n          <img v-bind:src=\"src\" v-for=\"(src, key) in previewImageList\" :key=\"key\">\n        </div>\n        <div><input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" multiple /></div>\n        <div><button v-on:click=\"onSubmit\">投稿</button></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport ImgUploader from '../assets/ImgUploader.js'\nimport PlacesManager from '../assets/PlacesManager.js'\nimport firebase from 'firebase'\nvar database = firebase.database()\n\nexport default {\n  name: \"regist\",\n  data () {\n    return {\n      isSignIn: null,\n      userInfo: null,\n      isNowLoading: true,\n      IU: null,\n      PM: null,\n      uploadFiles: null,\n      uploadPromiseList: [],\n      previewImageList: [],\n      submitImageUrlList: [],\n      searchResultPlaceList: [],\n      userAddedPlaceList: [],\n      nearbyPlaceList: [],\n      placeList: [],\n      friendsList: [],\n      whereAdd: null,\n      whoAdd: null,\n      when: null,\n      where: null,\n      who: null,\n      what: null\n    }\n  },\n  watch: {\n    isSignIn(after, before) {\n      if (before == null) {\n        this.initLoadFromFirebase()\n      }\n    },\n    userAddedPlaceList() {\n      this.onChangePlaceList()\n    },\n    searchResultPlaceList() {\n      this.onChangePlaceList()\n    },\n    nearbyPlaceList() {\n      this.onChangePlaceList()\n    }\n  },\n  methods: {\n    initLoadFromFirebase() {\n      firebase.database().ref(\"friends/\"+this.userInfo.uid).on('value', (snapshot) =>{\n        var friedsinfo = snapshot.val()\n        this.friendsList = []\n        Object.keys(friedsinfo).forEach(fid => {\n          this.friendsList.push({\n            \"friends_id\": fid,\n            \"name\": friedsinfo[fid].name\n          })\n        })\n      })\n      firebase.database().ref(\"places/\"+this.userInfo.uid).on('value', (snapshot) =>{\n        var placesinfo = snapshot.val()\n        this.userAddedPlaceList = []\n        this.userAddedPlaceList.push({name: \"-- User Saved Place --\", place_id: null})\n        Object.keys(placesinfo).forEach(pid => {\n          this.userAddedPlaceList.push({\n            \"place_id\": pid,\n            \"name\": placesinfo[pid].name\n          })\n        })\n      })\n    },\n    onFileChange(e) {\n      const files = e.target.files || e.dataTransfer.files;\n      this.uploadFiles = files\n      Array.from(files).forEach(file => {\n        this.createPreviewImage(file)\n      })\n      //this.createPreviewImage(files)\n    },\n    onChangePlaceList() {\n      this.placeList = []\n      var concat1 = this.searchResultPlaceList.concat(this.nearbyPlaceList)\n      this.placeList = this.userAddedPlaceList.concat(concat1)\n    },\n    createPreviewImage(file) {\n      const reader = new FileReader()\n      reader.onload = e => {\n        this.previewImageList.push(e.target.result)\n      }\n      reader.readAsDataURL(file)\n    },\n    uploadImg(file) {\n      return this.IU.upload(file)\n    },\n    uniqueStr() {\n      var strong = 1000\n      return new Date().getTime().toString(16)  + Math.floor(strong*Math.random()).toString(16)\n    },\n    onAddWhereButton() {\n      //this.whereAddで検索してみる\n      this.PM.searchplacesbyname(this.whereAdd).then((response) => {\n        // selectを更新\n        this.searchResultPlaceList = []\n        this.searchResultPlaceList.push({name: \"-- New User Add --\", place_id: null})\n        this.searchResultPlaceList.push({name: this.whereAdd, place_id: \"pid_\"+this.uniqueStr()})\n        this.searchResultPlaceList.push({name: \"-- Search Result --\", place_id: null})\n        response.data.forEach((place) => {\n          this.searchResultPlaceList.push(place)\n        })\n      }).catch((error) => {\n        console.log(\"Places Manager Error\", error)\n      })\n    },\n    onAddWhoButton() {\n      firebase.database().ref(\"friends/\"+this.userInfo.uid).push({\"name\":this.whoAdd}).then(() => {\n        alert(\"フレンドを追加しました！\")\n      })\n      .catch((error) => {\n        //onError\n        console.log(\"Firebase Error\", error)\n      })\n    },\n    onSubmit() {\n      // submit処理\n      // 1. 画像をアップロードする\n      if (this.uploadFiles != null) {\n        Array.from(this.uploadFiles).forEach(file => {\n          this.uploadPromiseList.push(this.uploadImg(file))\n        })\n      }\n      // 2. アップロードが完了したらすべての情報を合わせてRealtimeDBにset\n      Promise.all(this.uploadPromiseList).then((ImageUrls) => {\n        //APIから帰ってきたJSONをパースして、URLを配列にまとめる\n        ImageUrls.forEach((json) => {\n          this.submitImageUrlList.push(json.data.url)\n        })\n        var UserPostInfoObj = {\n          when: this.when,\n          where: this.where,\n          who: this.who,\n          what: this.what,\n          imgUrls: this.submitImageUrlList\n        }\n        //必須項目のチェック\n        if (UserPostInfoObj.when != null && UserPostInfoObj.where != null && UserPostInfoObj.what != null) {\n          if (UserPostInfoObj.when.replace(/\\s+/g,'').length > 0 && UserPostInfoObj.where.replace(/\\s+/g,'').length > 0 && UserPostInfoObj.what.replace(/\\s+/g,'').length > 0) {\n            //DBに保存\n            this.setFirebaseRealtimeDB(UserPostInfoObj)\n          } else {\n            alert(\"when, where, whatは必須項目です\")\n          }\n        } else {\n          alert(\"when, where, whatは必須項目です\")\n        }\n      })\n    },\n    setFirebaseRealtimeDB(Obj) {\n      // place_idから名前を取得\n      var place_name = null\n      Object.keys(this.placeList).forEach(k => {\n        if (this.placeList[k].place_id == Obj.where) {\n          place_name = this.placeList[k].name\n          return true;\n        }\n      })\n      // place_idと名前を保存(同名で上書きされるので存在確認はしない)\n      firebase.database().ref(\"places/\"+this.userInfo.uid+\"/\"+Obj.where).set({name: place_name}).then(() => {\n        //\n        firebase.database().ref(\"posts/\"+this.userInfo.uid).push(Obj).then(() => {\n          alert(\"投稿しました！\")\n        })\n        .catch((error) => {\n          //onError\n          console.log(\"Firebase Error\", error)\n          alert(\"投稿に失敗しました\")\n        })\n        //\n      })\n      .catch((error) => {\n        console.log(\"Firebase Error\", error)\n      })\n    }\n  },\n  mounted() {\n    const _this = this\n\n    firebase.auth().onAuthStateChanged(user => {\n      _this.isSignIn = (user != null)\n      _this.userInfo = user\n      _this.isNowLoading = false\n    })\n\n    this.IU = new ImgUploader(axios)\n    this.PM = new PlacesManager(axios)\n\n    // 現在地を取得\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => { \n        var data = position.coords\n\t      var lat = data.latitude\n\t      var lon = data.longitude\n        // \"-33.8670522\", \"151.1957362\"\n        // 取得した現在地をもとに近辺のランドマークを取得\n        this.PM.searchnearbyplacesbylatlon(lat, lon).then((response) => {\n          // selectを更新\n          this.nearbyPlaceList = []\n          this.nearbyPlaceList.push({name: \"-- GPS Result --\", place_id: null})\n          response.data.forEach((place) => {\n            this.nearbyPlaceList.push(place)\n          })\n        }).catch((error) => {\n          console.log(\"Places Manager Error\", error)\n        })\n      }, (error) => { console.log(\"GeoLocation API Error\", error) })\n    } else {\n      // 端末がGeoLocation APIに非対応だった場合\n      // 最近の場所を適当に表示\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.regist {\n  width: 100%;\n  height: 100%;\n  &__loading {\n    width: 100%;\n    height: 100%;\n  }\n  &__body {\n    width: 100%;\n    height: 100%;\n    &__signined {\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n.imgPreview > img {\n  width: 100px;\n}\n</style>"],"sourceRoot":"src/views"}]}