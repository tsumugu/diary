{"remainingRequest":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/thread-loader/dist/cjs.js!/Users/tsumugu/Documents/dev/vue/diary/node_modules/babel-loader/lib/index.js!/Users/tsumugu/Documents/dev/vue/diary/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tsumugu/Documents/dev/vue/diary/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsumugu/Documents/dev/vue/diary/src/views/RegistEventInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tsumugu/Documents/dev/vue/diary/src/views/RegistEventInfo.vue","mtime":1608298741877},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsumugu/Documents/dev/vue/diary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBJbWdVcGxvYWRlciBmcm9tICcuLi9hc3NldHMvSW1nVXBsb2FkZXIuanMnOwppbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UnOwp2YXIgZGF0YWJhc2UgPSBmaXJlYmFzZS5kYXRhYmFzZSgpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInJlZ2lzdCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzU2lnbkluOiBudWxsLAogICAgICB1c2VySW5mbzogbnVsbCwKICAgICAgaXNOb3dMb2FkaW5nOiB0cnVlLAogICAgICBJVTogbnVsbCwKICAgICAgdXBsb2FkRmlsZXM6IG51bGwsCiAgICAgIHVwbG9hZFByb21pc2VMaXN0OiBbXSwKICAgICAgcHJldmlld0ltYWdlTGlzdDogW10sCiAgICAgIHN1Ym1pdEltYWdlVXJsTGlzdDogW10sCiAgICAgIHBsYWNlTGlzdDogW3sKICAgICAgICBpZDogInRoaXNpc2lkLWFhYWEiLAogICAgICAgIG5hbWU6ICJUb2t5byIKICAgICAgfSwgewogICAgICAgIGlkOiAidGhpc2lzaWQtYmJiYiIsCiAgICAgICAgbmFtZTogIkt5b3RvIgogICAgICB9LCB7CiAgICAgICAgaWQ6ICJ0aGlzaXNpZC1jY2NjIiwKICAgICAgICBuYW1lOiAiSG9ra2FpZG8iCiAgICAgIH1dLAogICAgICBmcmllbmRzTGlzdDogW3sKICAgICAgICBpZDogInRoaXNpc2lkLWRkZGQiLAogICAgICAgIG5hbWU6ICJUYXJvIgogICAgICB9LCB7CiAgICAgICAgaWQ6ICJ0aGlzaXNpZC1lZWVlIiwKICAgICAgICBuYW1lOiAiSmlybyIKICAgICAgfSwgewogICAgICAgIGlkOiAidGhpc2lzaWQtZmZmZiIsCiAgICAgICAgbmFtZTogIlNhYnVybyIKICAgICAgfV0sCiAgICAgIHdoZW46IG51bGwsCiAgICAgIHdoZXJlOiBudWxsLAogICAgICB3aG86IG51bGwsCiAgICAgIHdoYXQ6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkZpbGVDaGFuZ2U6IGZ1bmN0aW9uIG9uRmlsZUNoYW5nZShlKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGZpbGVzID0gZS50YXJnZXQuZmlsZXMgfHwgZS5kYXRhVHJhbnNmZXIuZmlsZXM7CiAgICAgIHRoaXMudXBsb2FkRmlsZXMgPSBmaWxlczsKICAgICAgQXJyYXkuZnJvbShmaWxlcykuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSkgewogICAgICAgIF90aGlzMi5jcmVhdGVQcmV2aWV3SW1hZ2UoZmlsZSk7CiAgICAgIH0pOyAvL3RoaXMuY3JlYXRlUHJldmlld0ltYWdlKGZpbGVzKQogICAgfSwKICAgIGNyZWF0ZVByZXZpZXdJbWFnZTogZnVuY3Rpb24gY3JlYXRlUHJldmlld0ltYWdlKGZpbGUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgIF90aGlzMy5wcmV2aWV3SW1hZ2VMaXN0LnB1c2goZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKCiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgfSwKICAgIHVwbG9hZEltZzogZnVuY3Rpb24gdXBsb2FkSW1nKGZpbGUpIHsKICAgICAgcmV0dXJuIHRoaXMuSVUudXBsb2FkKGZpbGUpOwogICAgfSwKICAgIG9uU3VibWl0OiBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICAvLyBzdWJtaXTlh6bnkIYKICAgICAgLy8gMS4g55S75YOP44KS44Ki44OD44OX44Ot44O844OJ44GZ44KLCiAgICAgIGlmICh0aGlzLnVwbG9hZEZpbGVzICE9IG51bGwpIHsKICAgICAgICBBcnJheS5mcm9tKHRoaXMudXBsb2FkRmlsZXMpLmZvckVhY2goZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgICAgIF90aGlzNC51cGxvYWRQcm9taXNlTGlzdC5wdXNoKF90aGlzNC51cGxvYWRJbWcoZmlsZSkpOwogICAgICAgIH0pOwogICAgICB9IC8vIDIuIOOCouODg+ODl+ODreODvOODieOBjOWujOS6huOBl+OBn+OCieOBmeOBueOBpuOBruaDheWgseOCkuWQiOOCj+OBm+OBplJlYWx0aW1lRELjgatzZXQKCgogICAgICBQcm9taXNlLmFsbCh0aGlzLnVwbG9hZFByb21pc2VMaXN0KS50aGVuKGZ1bmN0aW9uIChJbWFnZVVybHMpIHsKICAgICAgICAvL0FQSeOBi+OCieW4sOOBo+OBpuOBjeOBn0pTT07jgpLjg5Hjg7zjgrnjgZfjgabjgIFVUkzjgpLphY3liJfjgavjgb7jgajjgoHjgosKICAgICAgICBJbWFnZVVybHMuZm9yRWFjaChmdW5jdGlvbiAoanNvbikgewogICAgICAgICAgX3RoaXM0LnN1Ym1pdEltYWdlVXJsTGlzdC5wdXNoKGpzb24uZGF0YS51cmwpOwogICAgICAgIH0pOwogICAgICAgIHZhciBVc2VyUG9zdEluZm9PYmogPSB7CiAgICAgICAgICB3aGVuOiBfdGhpczQud2hlbiwKICAgICAgICAgIHdoZXJlOiBfdGhpczQud2hlcmUsCiAgICAgICAgICB3aG86IF90aGlzNC53aG8sCiAgICAgICAgICB3aGF0OiBfdGhpczQud2hhdCwKICAgICAgICAgIGltZ1VybHM6IF90aGlzNC5zdWJtaXRJbWFnZVVybExpc3QKICAgICAgICB9OyAvL+W/hemgiOmgheebruOBruODgeOCp+ODg+OCrwoKICAgICAgICBpZiAoVXNlclBvc3RJbmZvT2JqLndoZW4gIT0gbnVsbCAmJiBVc2VyUG9zdEluZm9PYmoud2hlcmUgIT0gbnVsbCAmJiBVc2VyUG9zdEluZm9PYmoud2hhdCAhPSBudWxsKSB7CiAgICAgICAgICBpZiAoVXNlclBvc3RJbmZvT2JqLndoZW4ucmVwbGFjZSgvXHMrL2csICcnKS5sZW5ndGggPiAwICYmIFVzZXJQb3N0SW5mb09iai53aGVyZS5yZXBsYWNlKC9ccysvZywgJycpLmxlbmd0aCA+IDAgJiYgVXNlclBvc3RJbmZvT2JqLndoYXQucmVwbGFjZSgvXHMrL2csICcnKS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIC8vRELjgavkv53lrZgKICAgICAgICAgICAgX3RoaXM0LnNldEZpcmViYXNlUmVhbHRpbWVEQihVc2VyUG9zdEluZm9PYmopOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYWxlcnQoIndoZW4sIHdoZXJlLCB3aGF044Gv5b+F6aCI6aCF55uu44Gn44GZIik7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGFsZXJ0KCJ3aGVuLCB3aGVyZSwgd2hhdOOBr+W/hemgiOmgheebruOBp+OBmSIpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc2V0RmlyZWJhc2VSZWFsdGltZURCOiBmdW5jdGlvbiBzZXRGaXJlYmFzZVJlYWx0aW1lREIoT2JqKSB7CiAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCJwb3N0cy8iICsgdGhpcy51c2VySW5mby51aWQpLnB1c2goT2JqKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBhbGVydCgi5oqV56i/44GX44G+44GX44Gf77yBIik7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIC8vb25FcnJvcgogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICBhbGVydCgi5oqV56i/44Gr5aSx5pWX44GX44G+44GX44GfIik7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgZmlyZWJhc2UuYXV0aCgpLm9uQXV0aFN0YXRlQ2hhbmdlZChmdW5jdGlvbiAodXNlcikgewogICAgICBfdGhpcy5pc1NpZ25JbiA9IHVzZXIgIT0gbnVsbDsKICAgICAgX3RoaXMudXNlckluZm8gPSB1c2VyOwogICAgICBfdGhpcy5pc05vd0xvYWRpbmcgPSBmYWxzZTsKICAgIH0pOwogICAgdGhpcy5JVSA9IG5ldyBJbWdVcGxvYWRlcihheGlvcyk7CiAgfQp9Ow=="},{"version":3,"sources":["RegistEventInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"regist\">\n    <div class=\"regist__loading\" v-if=\"isNowLoading\"><!-- Loading --></div>\n    <div class=\"regist__body\" v-else>\n      <div class=\"regist__body__signined\" v-if=\"isSignIn\">\n        <!-- form -->\n        <div><input type=\"datetime-local\" placeholder=\"日付\" v-model=\"when\" /></div>\n        <div><select v-model=\"where\"><option disabled value=\"\">場所</option><option v-for=\"(val, key) in placeList\" v-bind:value=\"val.id\">{{val.name}}</option></select></div>\n        <div><select v-model=\"who\"><option disabled value=\"\">誰と行ったか</option><option v-for=\"(val, key) in friendsList\" v-bind:value=\"val.id\">{{val.name}}</option></select></div>\n        <div><textarea placeholder=\"したこと\" v-model=\"what\" /></div>\n        <div class=\"imgPreview\">\n          <img v-bind:src=\"src\" v-for=\"(src, key) in previewImageList\" :key=\"key\">\n        </div>\n        <div><input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" multiple /></div>\n        <div><button v-on:click=\"onSubmit\">投稿</button></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport ImgUploader from '../assets/ImgUploader.js'\nimport firebase from 'firebase'\nvar database = firebase.database()\n\nexport default {\n  name: \"regist\",\n  data () {\n    return {\n      isSignIn: null,\n      userInfo: null,\n      isNowLoading: true,\n      IU: null,\n      uploadFiles: null,\n      uploadPromiseList: [],\n      previewImageList: [],\n      submitImageUrlList: [],\n      placeList: [\n        {id:\"thisisid-aaaa\", name:\"Tokyo\"},\n        {id:\"thisisid-bbbb\", name:\"Kyoto\"},\n        {id:\"thisisid-cccc\", name:\"Hokkaido\"}\n      ],\n      friendsList: [\n        {id:\"thisisid-dddd\", name:\"Taro\"},\n        {id:\"thisisid-eeee\", name:\"Jiro\"},\n        {id:\"thisisid-ffff\", name:\"Saburo\"}\n      ],\n      when: null,\n      where: null,\n      who: null,\n      what: null\n    }\n  },\n  methods: {\n    onFileChange(e) {\n      const files = e.target.files || e.dataTransfer.files;\n      this.uploadFiles = files\n      Array.from(files).forEach(file => {\n        this.createPreviewImage(file)\n      })\n      //this.createPreviewImage(files)\n    },\n    createPreviewImage(file) {\n      const reader = new FileReader()\n      reader.onload = e => {\n        this.previewImageList.push(e.target.result)\n      }\n      reader.readAsDataURL(file)\n    },\n    uploadImg(file) {\n      return this.IU.upload(file)\n    },\n    onSubmit() {\n      // submit処理\n      // 1. 画像をアップロードする\n      if (this.uploadFiles != null) {\n        Array.from(this.uploadFiles).forEach(file => {\n          this.uploadPromiseList.push(this.uploadImg(file))\n        })\n      }\n      // 2. アップロードが完了したらすべての情報を合わせてRealtimeDBにset\n      Promise.all(this.uploadPromiseList).then((ImageUrls) => {\n        //APIから帰ってきたJSONをパースして、URLを配列にまとめる\n        ImageUrls.forEach(json => {\n          this.submitImageUrlList.push(json.data.url)\n        })\n        var UserPostInfoObj = {\n          when: this.when,\n          where: this.where,\n          who: this.who,\n          what: this.what,\n          imgUrls: this.submitImageUrlList\n        }\n        //必須項目のチェック\n        if (UserPostInfoObj.when != null && UserPostInfoObj.where != null && UserPostInfoObj.what != null) {\n          if (UserPostInfoObj.when.replace(/\\s+/g,'').length > 0 && UserPostInfoObj.where.replace(/\\s+/g,'').length > 0 && UserPostInfoObj.what.replace(/\\s+/g,'').length > 0) {\n            //DBに保存\n            this.setFirebaseRealtimeDB(UserPostInfoObj)\n          } else {\n            alert(\"when, where, whatは必須項目です\")\n          }\n        } else {\n          alert(\"when, where, whatは必須項目です\")\n        }\n      })\n    },\n    setFirebaseRealtimeDB(Obj) {\n      firebase.database().ref(\"posts/\"+this.userInfo.uid).push(Obj).then(() => {\n        alert(\"投稿しました！\")\n      })\n      .catch(function(error) {\n        //onError\n        console.log(error)\n        alert(\"投稿に失敗しました\")\n      })\n    }\n  },\n  mounted() {\n    const _this = this\n    firebase.auth().onAuthStateChanged(user => {\n      _this.isSignIn = (user != null)\n      _this.userInfo = user\n      _this.isNowLoading = false\n    })\n    this.IU = new ImgUploader(axios)\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.regist {\n  width: 100%;\n  height: 100%;\n  &__loading {\n    width: 100%;\n    height: 100%;\n  }\n  &__body {\n    width: 100%;\n    height: 100%;\n    &__signined {\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n.imgPreview > img {\n  width: 100px;\n}\n</style>"],"sourceRoot":"src/views"}]}